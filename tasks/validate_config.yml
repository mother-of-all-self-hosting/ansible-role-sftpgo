# SPDX-FileCopyrightText: 2023 Julian-Samuel GebÃ¼hr
# SPDX-FileCopyrightText: 2023 MASH project contributors
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: (Deprecation) Catch and report renamed settings
  ansible.builtin.fail:
    msg: >-
      Your configuration contains a variable, which now has a different name.
      Please change your configuration to rename the variable (`{{ item.old }}` -> `{{ item.new }}`).
  when: "lookup('ansible.builtin.varnames', ('^' + item.old + '$'), wantlist=True) | length > 0"
  with_items:
    - { "old": "sftpgo_http_header_content_permission_policy", "new": "sftpgo_http_header_permissions_policy" }

- name: Fail if required SFTPGo settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`).
  when: "lookup('vars', item, default='') | string | length == 0"
  with_items:
    - sftpgo_uid
    - sftpgo_gid
    - sftpgo_hostname
    - sftpgo_path_prefix
    - sftpgo_container_network

- name: Fail if SFTPGo data provider invalid
  ansible.builtin.fail:
    msg: >-
      sftpgo_environment_variables_data_provider_driver must be 'sqlite', 'mysql', 'postgresql', 'cockroachdb', 'bolt', or 'memory'
  when: "sftpgo_environment_variables_data_provider_driver not in ['sqlite', 'mysql', 'postgresql', 'cockroachdb', 'bolt', 'memory']"

- name: Fail if required SFTPGo + MySQL integration settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`) when `sftpgo_environment_variables_data_provider_driver` is `mysql`
  when: "sftpgo_environment_variables_data_provider_driver == 'mysql' and lookup('vars', item, default='') | string | length == 0"
  with_items:
    - sftpgo_database_mysql_hostname
    - sftpgo_database_mysql_password

- name: Fail if required SFTPGo + Postgres integration settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`) when `sftpgo_environment_variables_data_provider_driver` is `postgres`
  when: "sftpgo_environment_variables_data_provider_driver == 'postgres' and lookup('vars', item, default='') | string | length == 0"
  with_items:
    - sftpgo_database_postgresql_hostname
    - sftpgo_database_postgresql_password

- name: Fail if SMTP settings are missing (and SMTP is enabled by setting host)
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`) to correctly set up email via SMTP.
  when: "sftpgo_environment_variables_smtp_enabled | bool and lookup('vars', item, default='') | string | length == 0"
  with_items:
    - sftpgo_environment_variables_smtp_host
    - sftpgo_environment_variables_smtp_port
    - sftpgo_environment_variables_smtp_from

- name: Run if Traefik is enabled
  when: sftpgo_container_labels_traefik_enabled | bool
  block:
    - name: Fail if Traefik settings required for SFTPGo are not defined
      ansible.builtin.fail:
        msg: >-
          You need to define a required configuration setting (`{{ item }}`).
      when: "lookup('vars', item, default='') | string | length == 0"
      with_items:
        - sftpgo_container_labels_traefik_hostname
        - sftpgo_container_labels_traefik_path_prefix

    # We ensure it doesn't end with a slash, because we handle both (slash and no-slash).
    # Knowing that `sftpgo_container_labels_traefik_path_prefix` does not end with a slash
    # ensures we know how to set these routes up without having to do "does it end with a slash" checks elsewhere.
    - name: Fail if sftpgo_container_labels_traefik_path_prefix ends with a slash
      ansible.builtin.fail:
        msg: >-
          sftpgo_container_labels_traefik_path_prefix (`{{ sftpgo_container_labels_traefik_path_prefix }}`) must either be `/` or not end with a slash (e.g. `/sftpgo`).
      when: "sftpgo_container_labels_traefik_path_prefix != '/' and sftpgo_container_labels_traefik_path_prefix[-1] == '/'"
